""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                               plugins                                "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
call plug#begin('~/.vim/plugged')

" Automatic installation of vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" flying
Plug 'tpope/vim-commentary'

" go
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'stamblerre/gocode', { 'rtp': 'vim', 'do': '~/.vim/plugged/gocode/vim/symlink.sh' }
Plug 'sheerun/vim-polyglot'

" misc
Plug 'junegunn/goyo.vim'
Plug 'morhetz/gruvbox'
Plug 'arcticicestudio/nord-vim'
Plug 'chriskempson/base16-vim'

call plug#end()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                               settings                               "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

syntax on
filetype on
filetype plugin on
filetype indent on
set belloff=all
set nonumber
set norelativenumber
set nocompatible
set icon
set showmode
set showmatch
set history=100
set autowrite           " autosave when changing
set hidden              " when switching buffers
set cmdheight=1         " avoid HitEnter prompts
set shortmess=aoOtIF    " avoid HitEnter prompts
set nobackup            " more risky, but cleaner
set noswapfile
set nowritebackup
set ttyfast             " faster scrolling
set nofixendofline      " prevent silent fixing by vim
set incsearch           " highlight search while typing
set hlsearch
set ignorecase

set noruler
set laststatus=2
set statusline=
set statusline+=%*\ %<%.60F%*                 " path, trunc to 80 length
set statusline+=\ [%{strlen(&ft)?&ft:'none'}] " filetype
set statusline+=%*\ %l:%c%*                   " current line and column
set statusline+=%*\ %p%%%*                    " percentage

set nofoldenable    " disable folding
set textwidth=72
set linebreak
set tabstop=2
set shiftwidth=2
set smarttab
set smartindent
set autoindent
set expandtab       " replace tabs with spaces
set softtabstop=2
set wildmenu        " Better command search
set wildignorecase

if !has("gui_running")
  set term=xterm
endif
if $TERM == "xterm-256color" || $TERM == "screen-256color" || $COLORTERM == "gnome-terminal"
  set t_Co=256
endif

" vim background fix in tmux
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

" let base16colorspace=256  " Access colors present in 256 colorspac
" colorscheme base16-grayscale-dark

colorscheme nord
" " colorscheme gruvbox

hi StatusLine ctermfg=black ctermbg=NONE guibg=NONE
hi StatusLineNC ctermfg=black ctermbg=NONE guibg=NONE
hi Normal ctermbg=NONE guibg=NONE
hi Special ctermfg=cyan guibg=NONE
hi LineNr ctermfg=black ctermbg=NONE guibg=NONE
hi SpecialKey ctermfg=black ctermbg=NONE guibg=NONE
hi ModeMsg ctermfg=black cterm=NONE ctermbg=NONE guibg=NONE
hi MoreMsg ctermfg=black ctermbg=NONE guibg=NONE
hi NonText ctermfg=black ctermbg=NONE guibg=NONE
hi vimGlobal ctermfg=black ctermbg=NONE guibg=NONE
hi ErrorMsg ctermbg=234 ctermfg=darkred cterm=NONE guibg=NONE
hi Error ctermbg=234 ctermfg=darkred cterm=NONE guibg=NONE
hi SpellBad ctermbg=234 ctermfg=darkred cterm=NONE guibg=NONE
hi SpellRare ctermbg=234 ctermfg=darkred cterm=NONE guibg=NONE
hi Search ctermbg=236 ctermfg=darkred guibg=NONE
hi vimTodo ctermbg=236 ctermfg=darkred guibg=NONE
hi Todo ctermbg=236 ctermfg=darkred guibg=NONE
hi IncSearch ctermbg=236 cterm=NONE ctermfg=darkred guibg=NONE
hi MatchParen ctermbg=236 ctermfg=darkred guibg=NONE

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                        functions & auto commands                      "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

fun! TrimWhitespace()
  let l:save = winsaveview()
  keeppatterns %s/\s\+$//e
  call winrestview(l:save)
endfun

augroup MY_AUTOCMDS
  autocmd BufNewFile,BufRead *.md set filetype=markdown
  autocmd BufNewFile,BufRead *.{yaml,yml} set filetype=yaml

 autocmd BufWritePre * :call TrimWhitespace()
  autocmd CompleteDone * silent! pclose!


  " " colour overrides
  " au FileType * hi StatusLine ctermfg=black ctermbg=NONE guibg=NONE
  " au FileType * hi StatusLineNC ctermfg=black ctermbg=NONE guibg=NONE
  " au FileType * hi Normal ctermbg=NONE guibg=NONE
  " au FileType * hi Special ctermfg=cyan guibg=NONE
  " au FileType * hi LineNr ctermfg=black ctermbg=NONE guibg=NONE
  " au FileType * hi SpecialKey ctermfg=black ctermbg=NONE guibg=NONE
  " au FileType * hi ModeMsg ctermfg=black cterm=NONE ctermbg=NONE guibg=NONE
  " au FileType * hi MoreMsg ctermfg=black ctermbg=NONE guibg=NONE
  " au FileType * hi NonText ctermfg=black ctermbg=NONE guibg=NONE
  " au FileType * hi vimGlobal ctermfg=black ctermbg=NONE guibg=NONE
  " au FileType * hi ErrorMsg ctermbg=234 ctermfg=darkred cterm=NONE guibg=NONE
  " au FileType * hi Error ctermbg=234 ctermfg=darkred cterm=NONE guibg=NONE
  " au FileType * hi SpellBad ctermbg=234 ctermfg=darkred cterm=NONE guibg=NONE
  " au FileType * hi SpellRare ctermbg=234 ctermfg=darkred cterm=NONE guibg=NONE
  " au FileType * hi Search ctermbg=236 ctermfg=darkred guibg=NONE
  " au FileType * hi vimTodo ctermbg=236 ctermfg=darkred guibg=NONE
  " au FileType * hi Todo ctermbg=236 ctermfg=darkred guibg=NONE
  " au FileType * hi IncSearch ctermbg=236 cterm=NONE ctermfg=darkred guibg=NONE
  " au FileType * hi MatchParen ctermbg=236 ctermfg=darkred guibg=NONE
  " au FileType markdown hi Title ctermfg=yellow ctermbg=NONE guibg=NONE
  " au FileType markdown hi Operator ctermfg=yellow ctermbg=NONE guibg=NONE

  " transparent background
  autocmd VimEnter * hi Conceal guibg=NONE
  autocmd VimEnter * hi StatusLine guibg=NONE guifg=#EBCB8B
  autocmd VimEnter * hi Normal guibg=NONE
augroup END

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                               mappings                               "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let mapleader = ' '
nnoremap <silent> <leader><CR> :noh<CR>:redraw!<CR>
map <F8> <Esc>:setlocal spell spelllang=de<CR>
map <F9> <Esc>:setlocal spell spelllang=en_gb<CR>
map <F10> <Esc>:setlocal spell spelllang=da<CR>
map <F11> <Esc>:setlocal nospell<CR>

" yank like D or C
noremap Y y$

" Stay in visual mode
vnoremap < <gv
vnoremap > >gv

" Better page down and page up
noremap <C-j> <C-d>
noremap <C-k> <C-b>

" Search word under cursor
" https://github.com/hikmet-kibar/scripts/cmd/searchweb
nnoremap <silent> <leader>d :exec "!searchweb -page=duck "
                              \ . expand("<cword>")<CR> :redraw!<CR>
nnoremap <silent> <leader>o :exec "!searchweb -page=ordnet "
                              \ . expand("<cword>")<CR> :redraw!<CR>
nnoremap <silent> <leader>k :exec "!searchweb -page=korpus "
                              \ . expand("<cword>")<CR> :redraw!<CR>
nnoremap <silent> <leader>t :exec "!searchweb -page=tysk "
                              \ . expand("<cword>")<CR> :redraw!<CR>

