"  ---- PLUGINS
" prevent polyglot from overwriting markdown
let g:polyglot_disabled = ['markdown']

" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif

call plug#begin('~/.vim/plugged')

Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'junegunn/goyo.vim'
Plug 'sheerun/vim-polyglot'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'pineapplegiant/spaceduck', { 'branch': 'main' }

" Plug 'tpope/vim-markdown'



call plug#end()

" ----- SOURCES
source ~/.vim/functions.vim " functions and autocommands
source ~/.vim/mappings.vim

" ----- SETTINGS
syntax on
filetype on
filetype plugin on
filetype indent on
set belloff=all
set number
set relativenumber
set nocompatible
set icon
set showmode
set showmatch
set history=100
set autowrite           " autosave when changing
set hidden              " when switching buffers
set cmdheight=1         " avoid HitEnter prompts
set shortmess=aoOtIF    " avoid HitEnter prompts
set nobackup            " more risky, but cleaner
set noswapfile
set nowritebackup
set ttyfast             " faster scrolling
set nofixendofline      " prevent silent fixing by vim
set incsearch           " highlight search while typing
set hlsearch
set ignorecase

set path+=**
set nofixendofline      " better ascii friendly listchars
set listchars=space:*,trail:*,nbsp:*,extends:>,precedes:<,tab:\|>
set foldenable
set wrapscan
set noruler
set laststatus=2
set statusline=
set statusline+=%*\ %<%.60F%*                 " path, trunc to 80 length
set statusline+=\ [%{strlen(&ft)?&ft:'none'}] " filetype
set statusline+=%*\ %l:%c%*                   " current line and column
set statusline+=%*\ %p%%%*                    " percentage

set textwidth=72
set linebreak
set tabstop=2
set shiftwidth=2
set smarttab
set smartindent
set autoindent
set expandtab       " replace tabs with spaces
set softtabstop=2
set wildmenu        " Better command search
set wildignorecase

let g:netrw_fastbrowse = 0
let g:netrw_list_hide = '\(^\|\s\s\)\zs\.\S\+' " dotfiles
let g:netrw_liststyle=3
let g:netrw_keepdir = 0
let g:netrw_banner = 0
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 25
hi! link netrwMarkFile Search

" ----- Colors

" let base16colorspace=256  " Access colors present in 256 colorspace
" hi Conceal guibg=NONE
set background=dark
set termguicolors
" colorscheme matrix
colorscheme spaceduck
hi StatusLine guifg=#30365F ctermfg=237 guibg=NONE ctermbg=NONE gui=NONE cterm=NONE
hi Conceal ctermbg=NONE
