
" ----- PLUGINS

call plug#begin('~/.vim/plugged')

if empty(glob('~/.vim/autoload/plug.vim')) " Automatic installation of vim-plug
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif


Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }

Plug 'sheerun/vim-polyglot'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-markdown'
Plug 'arcticicestudio/nord-vim'

call plug#end()


" ----- SETTINGS
syntax on
filetype on
filetype plugin on
filetype indent on
set belloff=all
set number
set relativenumber
set nocompatible
set icon
set showmode
set showmatch
set history=100
set autowrite           " autosave when changing
set hidden              " when switching buffers
set cmdheight=1         " avoid HitEnter prompts
set shortmess=aoOtIF    " avoid HitEnter prompts
set nobackup            " more risky, but cleaner
set noswapfile
set nowritebackup
set ttyfast             " faster scrolling
set nofixendofline      " prevent silent fixing by vim
set incsearch           " highlight search while typing
set hlsearch
set ignorecase

set nofixendofline
" better ascii friendly listchars
set listchars=space:*,trail:*,nbsp:*,extends:>,precedes:<,tab:\|>
set foldenable
set wrapscan
set noruler
set laststatus=2
set statusline=
set statusline+=%*\ %<%.60F%*                 " path, trunc to 80 length
set statusline+=\ [%{strlen(&ft)?&ft:'none'}] " filetype
set statusline+=%*\ %l:%c%*                   " current line and column
set statusline+=%*\ %p%%%*                    " percentage

set textwidth=72
set linebreak
set tabstop=2
set shiftwidth=2
set smarttab
set smartindent
set autoindent
set expandtab       " replace tabs with spaces
set softtabstop=2
set wildmenu        " Better command search
set wildignorecase

let g:netrw_liststyle=3
let g:netrw_banner = 0
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 25

" ----- FUNCTIONS & AUTO COMMANDS


fun! TrimWhitespace()
  let l:save = winsaveview()
  keeppatterns %s/\s\+$//e
  call winrestview(l:save)
endfun

augroup MY_AUTOCMDS
  autocmd BufWinEnter,BufNewFile,BufRead *.md set filetype=markdown
  autocmd BufNewFile,BufRead *.{yaml,yml} set filetype=yaml
  autocmd BufWritePre * :call TrimWhitespace()
  autocmd CompleteDone * silent! pclose!
augroup END

" Snip() & PasteSnip() depend on Vim 8.2+
" because of popup (!)
fun! Snip()
  let l:snips = systemlist("snip ls")
  let choice =  popup_menu( snips, #{
        \ title: "Snips:",
        \ pos: "center",
        \ callback: "PasteSnip",
        \ border: [],
        \ padding: [0,1,0,1]} )
endfunction
fun! PasteSnip(id, result)
  let l:line = line(".")
  let l:snipName =  systemlist("snip ls")[a:result - 1]
  let l:cmd = join(["snip get", snipName], " ")
  call append(line, systemlist(cmd))
endfunction

" ----- MAPPINGS
let mapleader = ' '
nnoremap <silent> <leader><CR> :noh<CR>:redraw!<CR>
map <F8> <Esc>:setlocal spell spelllang=de<CR>
map <F9> <Esc>:setlocal spell spelllang=en_gb<CR>
map <F10> <Esc>:setlocal spell spelllang=da<CR>
map <F11> <Esc>:setlocal nospell<CR>

" undo breakpoints
inoremap , ,<C-g>u
inoremap . .<C-g>u
inoremap ! !<C-g>u
inoremap ? ?<C-g>u
inoremap * <C-g>u*

" cursor positioning
nnoremap n nzzzv
nnoremap N Nzzzv
nnoremap J mzJ'z

" yank like D or C
nnoremap Y yg_

" stay in visual mode
vnoremap < <gv
vnoremap > >gv

" better page down and page up
nnoremap <C-j> <C-d>
nnoremap <C-k> <C-b>

" Snip() & PasteSnip() depend on Vim 8.2+
" because of popup (!)
nnoremap <leader>s :call Snip()<CR>

" moving lines
vnoremap K :m '<-2<CR>gv=gv
vnoremap J :m '>+1<CR>gv=gv
nnoremap <leader>k :m .-2<CR>==
nnoremap <leader>j :m .+1<CR>==


" ----- COLORS
set t_Co=256
set t_AB=^[[48;5;%dm
set t_AF=^[[38;5;%dm

if exists('+termguicolors') " vim background fix in tmux
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif
" let base16colorspace=256  " Access colors present in 256 colorspace

colorscheme nord
hi Normal guibg=NONE
hi Conceal guibg=NONE
" red
hi ErrorMsg ctermfg=160 ctermbg=NONE guifg=#d70000 guibg=NONE "rgb=215,0,0
hi SpellBad ctermfg=160 ctermbg=NONE guifg=#d70000 guibg=NONE "rgb=215,0,0
hi Error ctermfg=160 ctermbg=NONE guifg=#d70000 guibg=NONE "rgb=215,0,0
hi SpecialKey ctermfg=160 ctermbg=NONE guifg=#d70000 guibg=NONE "rgb=215,0,0
" grey
hi LineNr ctermbg=NONE ctermfg=242 guifg=#6c6c6c guibg=NONE "rgb=108,108,108
hi Comment ctermbg=NONE ctermfg=242 guifg=#6c6c6c guibg=NONE "rgb=108,108,108
hi StatusLine ctermbg=NONE ctermfg=242 guifg=#6c6c6c guibg=NONE "rgb=108,108,108
hi StatusLineNC ctermbg=NONE ctermfg=242 guifg=#6c6c6c guibg=NONE "rgb=108,108,108
" yellow
hi MatchParen ctermbg=NONE guibg=NONE ctermfg=220 guifg=#ffd700 "rgb=255,215,0
hi Search ctermbg=NONE guibg=NONE ctermfg=220 guifg=#ffd700 "rgb=255,215,0
hi IncSearch ctermbg=NONE guibg=NONE ctermfg=220 guifg=#ffd700 "rgb=255,215,0
hi ModeMsg ctermbg=NONE guibg=NONE ctermfg=220 guifg=#ffd700 "rgb=255,215,0
hi MoreMsg ctermbg=NONE guibg=NONE ctermfg=220 guifg=#ffd700 "rgb=255,215,0

