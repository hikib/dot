" ----- PLUGINS
" prevent polyglot from overwriting markdown
let g:polyglot_disabled = ['markdown']

" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif

call plug#begin('~/.vim/plugged')


Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }

Plug 'junegunn/goyo.vim'
Plug 'sheerun/vim-polyglot'
Plug 'tpope/vim-commentary'
" Plug 'tpope/vim-markdown'
Plug 'arcticicestudio/nord-vim'

call plug#end()

" ----- SOURCES
source ~/.vim/functions.vim " functions and autocommands
source ~/.vim/mappings.vim

" ----- SETTINGS
syntax on
filetype on
filetype plugin on
filetype indent on
set belloff=all
set number
set relativenumber
set nocompatible
set icon
set showmode
set showmatch
set history=100
set autowrite           " autosave when changing
set hidden              " when switching buffers
set cmdheight=1         " avoid HitEnter prompts
set shortmess=aoOtIF    " avoid HitEnter prompts
set nobackup            " more risky, but cleaner
set noswapfile
set nowritebackup
set ttyfast             " faster scrolling
set nofixendofline      " prevent silent fixing by vim
set incsearch           " highlight search while typing
set hlsearch
set ignorecase

set path+=**
set nofixendofline      " better ascii friendly listchars
set listchars=space:*,trail:*,nbsp:*,extends:>,precedes:<,tab:\|>
set foldenable
set wrapscan
set noruler
set laststatus=2
set statusline=
set statusline+=%*\ %<%.60F%*                 " path, trunc to 80 length
set statusline+=\ [%{strlen(&ft)?&ft:'none'}] " filetype
set statusline+=%*\ %l:%c%*                   " current line and column
set statusline+=%*\ %p%%%*                    " percentage

set textwidth=72
set linebreak
set tabstop=2
set shiftwidth=2
set smarttab
set smartindent
set autoindent
set expandtab       " replace tabs with spaces
set softtabstop=2
set wildmenu        " Better command search
set wildignorecase

let g:netrw_liststyle=3
let g:netrw_banner = 0
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 25


" set t_Co=256
" set t_AB=^[[48;5;%dm
" set t_AF=^[[38;5;%dm

" if exists('+termguicolors') " vim background fix in tmux
" let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
" let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
" set termguicolors
" endif

let base16colorspace=256  " Access colors present in 256 colorspace

colorscheme nord

" " search for: 256 colors xterm
hi Conceal guibg=NONE
" " red
hi ErrorMsg ctermfg=160 ctermbg=NONE guifg=#d70000 guibg=NONE "rgb=215,0,0
hi SpellBad ctermfg=160 ctermbg=NONE guifg=#d70000 guibg=NONE "rgb=215,0,0
hi Error ctermfg=160 ctermbg=NONE guifg=#d70000 guibg=NONE "rgb=215,0,0
hi SpecialKey ctermfg=160 ctermbg=NONE guifg=#d70000 guibg=NONE "rgb=215,0,0
" " grey
hi LineNr ctermbg=NONE ctermfg=242 guifg=#6c6c6c guibg=NONE "rgb=108,108,108
hi Comment ctermbg=NONE ctermfg=242 guifg=#6c6c6c guibg=NONE "rgb=108,108,108
hi StatusLine ctermbg=NONE ctermfg=242 guifg=#6c6c6c guibg=NONE "rgb=108,108,108
hi StatusLineNC ctermbg=NONE ctermfg=242 guifg=#6c6c6c guibg=NONE "rgb=108,108,108
" " yellow
hi MatchParen ctermbg=NONE guibg=NONE ctermfg=220 guifg=#ffd700 "rgb=255,215,0
hi Search ctermbg=NONE guibg=NONE ctermfg=220 guifg=#ffd700 "rgb=255,215,0
hi IncSearch ctermbg=NONE guibg=NONE ctermfg=220 guifg=#ffd700 "rgb=255,215,0
hi ModeMsg ctermbg=NONE guibg=NONE ctermfg=220 guifg=#ffd700 "rgb=255,215,0
hi MoreMsg ctermbg=NONE guibg=NONE ctermfg=220 guifg=#ffd700 "rgb=255,215,0

" orange
" hi PreProc ctermfg=215 guifg=#ff8700 guibg=NONE
" hi Number ctermfg=215 guifg=#ff8700 guibg=NONE
" hi String ctermfg=215 guifg=#ff8700 guibg=NONE
" ----- other things
" hi Boolean ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Character ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Comment ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Conceal ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Conditional ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Constant ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Decorator ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Define ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Delimiter ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Exception ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Float ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Function ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Identifier ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Include ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Keyword ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Label ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Operator ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Repeat ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Special ctermfg=57 guifg=#875fd7 guibg=NONE
" hi SpecialChar ctermfg=57 guifg=#875fd7 guibg=NONE
" hi SpecialComment ctermfg=57 guifg=#875fd7 guibg=NONE
" hi StorageClass ctermfg=57 guifg=#875fd7 guibg=NONE
" hi String ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Structure ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Tag ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Todo ctermfg=57 guifg=#875fd7 guibg=NONE
" hi Typedef ctermfg=57 guifg=#875fd7 guibg=NONE


